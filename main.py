from telegram.ext import *
from telegram import *
from other.weather import weather
from other.comments import comments
from maps.closest_cinema import closest_cinema
from games.dice import throw_a_cube, dice
import argparse
import requests

parser = argparse.ArgumentParser()

try:
    parser.add_argument("token", nargs="*")
    args = parser.parse_args()
    updater_ = Updater(args.token[0])
except Exception:
    try:
        f = open("token.txt", encoding="utf8")
        updater_ = Updater(f.readlines()[-1])
    except Exception:
        print('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω')

try:
    p = open("pass.txt", encoding="utf8")
    admin_pass = p.readlines()[0]
except Exception:
    admin_pass = 'Arev141105'

user_name = ''
user_city = ''
user_address = ''
user_comment = ''
country = ''
is_admin = True

keyboard_main = [['–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É', '–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤', '–í–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å'],
                 ['–ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π –°–∏–Ω–µ–º–∞ –ü–∞—Ä–∫'],
                 ['–ò–≥—Ä—ã']]
keyboard_games = [['–ö–∏–Ω—É—Ç—å –∫—É–±–∏–∫'],
                  ['–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏']]
keyboard_admin = [['–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞']]
keyboard = keyboard_main


def main():
    global updater_
    dp = updater_.dispatcher
    conv_handler = ConversationHandler(
        # –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –¥–∏–∞–ª–æ–≥.
        # –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äî –∫–æ–º–∞–Ω–¥–∞ /start. –û–Ω–∞ –∑–∞–¥–∞—ë—Ç –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å.
        entry_points=[CommandHandler('start', start)],

        # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ –¥–∏–∞–ª–æ–≥–∞.
        states={
            1: [MessageHandler(Filters.text, get_city)],
            2: [MessageHandler(Filters.text, get_address)],
            3: [MessageHandler(Filters.text, second_start)],
            4: [MessageHandler(Filters.text, get_comments)],
            5: [MessageHandler(Filters.text, text_commands)],
        },

        fallbacks=[CommandHandler('stop', stop)]
    )
    dp.add_handler(conv_handler)


def start(update, context):
    global user_city
    global is_admin
    update.message.reply_text(
        '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥ –∏ –∞–¥—Ä–µ—Å, '
        '—á—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞')
    update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥',
                              reply_markup=ReplyKeyboardRemove())
    return 1


def get_city(update, context):
    global user_city
    user_city = update.message.text
    update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å')
    return 2


def get_address(update, context):
    global user_address
    user_address = update.message.text
    reply_keyboard = [['–î–∞', '–ù–µ—Ç']]
    markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True)
    update.message.reply_text(f'–í–∞—à –≥–æ—Ä–æ–¥: {user_city}')
    update.message.reply_text(f'–í–∞—à –∞–¥—Ä–µ—Å: {user_address}')
    update.message.reply_text('–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –¥–∞–Ω–Ω—ã–µ?',
                              reply_markup=markup)
    return 3


def second_start(update, context):
    global user_city
    if update.message.text == '–ù–µ—Ç':
        update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥')
        return 1
    else:
        markup = ReplyKeyboardMarkup(keyboard)
        update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',
                                  reply_markup=markup)
    return 5


def get_weather(update, context):
    global user_city
    if weather(user_city)["conditions"] is not None:
        update.message.reply_text(
            f'–í –≥–æ—Ä–æ–¥–µ {user_city} {weather(user_city)["conditions"]}')
        update.message.reply_text(
            f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather(user_city)["temp"]}C, —Å–∞–º–æ–µ –≤—Ä–µ–º—è —Å—Ö–æ–¥–∏—Ç—å –≤ –∫–∏–Ω–æ')
    else:
        update.message.reply_text(
            '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')


def get_closest_cinema(update, context):
    global user_city
    global user_address
    try:
        file_name = closest_cinema(user_city, user_address)[0]
        pharmacy_name = closest_cinema(user_city, user_address)[1]
        distance_to_pharmacy = closest_cinema(user_city, user_address)[2]
        pharmacy_address = closest_cinema(user_city, user_address)[3]
        pharmacy_time_of_works = closest_cinema(user_city, user_address)[4]
        update.message.reply_photo(photo=open(f'img/{file_name}', 'rb'))
        update.message.reply_text(
            f'{pharmacy_name} {pharmacy_time_of_works}')
        update.message.reply_text(
            f'–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ {pharmacy_address}: {distance_to_pharmacy}–º')
    except Exception as e:
        print(e)
        update.message.reply_text(
            f'–†—è–¥–æ–º —Å –≤–∞–º–∏ –Ω–µ—Ç –°–∏–Ω–µ–º–∞ –ü–∞—Ä–∫–∞')


def get_comments(update, context):
    global user_comment
    global user_name
    user_name = update.message.from_user.username
    user_comment = update.message.text
    return 5


def text_commands(update, context):
    global user_comment
    global keyboard
    global current_city
    global game_is_played
    global is_admin
    global try_counter

    # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ
    if update.message.text == '/start':
        update.message.reply_text(
            '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥ –∏ –∞–¥—Ä–µ—Å, —á—Ç–æ'
            '–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞')
        update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥')
        return 1

    # –í–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞
    if update.message.text == '–í–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å':
        update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥')
        return 1

    # –í–≤–æ–¥ –æ—Ç–∑—ã–≤–∞
    if update.message.text == '–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤':
        reply_keyboard = [['–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å']]
        markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True)
        update.message.reply_text(
            f'–°—é–¥–∞ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤–∞—à –æ—Ç–∑—ã–≤', reply_markup=markup)
        return 4

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞
    if update.message.text == '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
        print("user_comment =", user_comment)
        markup = ReplyKeyboardMarkup(keyboard)
        if user_comment != '':
            update.message.reply_text('–í–∞—à –æ—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω!',
                                      reply_markup=markup)
            comments(user_comment, user_name)
            user_comment = ''
        else:
            update.message.reply_text('–í–∞—à –æ—Ç–∑—ã–≤ –ø—É—Å—Ç',
                                      reply_markup=markup)


    # –û–±—Ä–∞–±—Ç–æ–∫–∞ –∫–æ–º–∞–Ω–¥—ã –≤—ã–≤–æ–¥–∞ –ø–æ–≥–æ–¥—ã
    if update.message.text == '–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É':
        get_weather(update, context)

    # –û–±—Ä–∞–±—Ç–æ–∫–∞ –∫–æ–º–∞–Ω–¥—ã –≤—ã–≤–æ–¥–∞ –±–ª–∏–∂–∞–π—à–µ–≥–æ
    if update.message.text == '–ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π –°–∏–Ω–µ–º–∞ –ü–∞—Ä–∫':
        get_closest_cinema(update, context)

    # –û–±—Ä–∞–±—Ç–æ–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–º–µ–Ω—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ –∏–≥—Ä–æ–≤—É—é
    if update.message.text == '–ò–≥—Ä—ã':
        keyboard = keyboard_games
        markup = ReplyKeyboardMarkup(keyboard)
        update.message.reply_text(
            f'–ü–µ—Ä–µ–∫–ª—é—á–∞—é –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "{update.message.text}"',
            reply_markup=markup)

    # –û–±—Ä–∞–±—Ç–æ–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–º–µ–Ω—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é
    if update.message.text == '–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏':
        keyboard = keyboard_main
        markup = ReplyKeyboardMarkup(keyboard)
        update.message.reply_text(
            f'–ü–µ—Ä–µ–∫–ª—é—á–∞—é –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "{update.message.text}"',
            reply_markup=markup)

    # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –º–µ–Ω—é –∏–≥—Ä
    if update.message.text == '‚è™ –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥':
        markup = ReplyKeyboardMarkup(keyboard)
        update.message.reply_text('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥', reply_markup=markup)

    # –ö–∏–¥–∞–µ–º–π –∫—É–±–∏–∫
    if update.message.text == '–ö–∏–Ω—É—Ç—å –∫—É–±–∏–∫':
        dice(update, context)

    # –ö–∏–¥–∞–µ–º –æ–¥–∏–Ω —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫
    if update.message.text == 'üé≤ –ö–∏–Ω—É—Ç—å –æ–¥–∏–Ω —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫':
        update.message.reply_text(' '.join(throw_a_cube(6)))

    # –ö–∏–¥–∞–µ–º 2 —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω—ã—Ö –∫—É–±–∏–∫–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
    if update.message.text == 'üé≤ üé≤–ö–∏–Ω—É—Ç—å 2 —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω—ã—Ö –∫—É–±–∏–∫–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ':
        update.message.reply_text(' '.join(throw_a_cube(6, 2)))

    # –ö–∏–¥–∞–µ–º 20-–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫
    if update.message.text == 'üé± –ö–∏–Ω—É—Ç—å 20-–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫':
        update.message.reply_text(' '.join(throw_a_cube(20)))

    # –í—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
    if update.message.text == admin_pass:
        is_admin = True
        markup = ReplyKeyboardMarkup(keyboard_admin)
        update.message.reply_text(
            '–í—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏', reply_markup=markup)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å –∞–¥–º–∏–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
    if update.message.text == '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞':
        markup = ReplyKeyboardMarkup(keyboard)
        if is_admin is True:
            update.message.reply_text('–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é...')
            update.message.reply_text(
                '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥ –∏ –∞–¥—Ä–µ—Å, —á—Ç–æ'
                '–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞',
                reply_markup=ReplyKeyboardRemove())
            update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥')
            return 1
        else:
            update.message.reply_text('–ö–∞–∂–µ—Ç—Å—è –≤—ã –Ω–µ –∞–¥–º–∏–Ω',
                                      reply_markup=markup)


def stop(update, context):
    update.message.reply_text(
        "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è")
    return ConversationHandler.END  # –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞, –æ–∑–Ω–∞—á–∞—é—â–∞—è –∫–æ–Ω–µ—Ü –¥–∏–∞–ª–æ–≥–∞.


if __name__ == '__main__':
    main()
    try:
        updater_.start_polling()
        updater_.idle()
    except Exception:
        pass
